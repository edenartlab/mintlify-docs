{
  "openapi": "3.0.0",
  "info": {
    "title": "@fastify/swagger",
    "description": "API for Eden.art platform",
    "version": "8.14.0"
  },
  "paths": {
    "/manna/balance": {
      "get": {
        "summary": "Get Manna Balance",
        "description": "Retrieve the authenticated user's current manna balance and subscription balance.",
        "tags": [
          "Manna"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "balance": {
                      "type": "number"
                    },
                    "subscriptionBalance": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "balance",
                    "subscriptionBalance"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/manna/vouchers/redeem": {
      "post": {
        "summary": "Redeem Manna Voucher",
        "description": "Redeem a manna voucher code to add manna to the authenticated user's account.",
        "tags": [
          "Manna"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  }
                },
                "required": [
                  "code"
                ]
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "action": {
                      "type": "string"
                    },
                    "manna": {
                      "type": "number"
                    },
                    "transactionId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apikeys": {
      "post": {
        "summary": "Create API Key",
        "description": "Create a new API key for authentication. You can optionally provide a note to help identify the key.",
        "tags": [
          "API Keys"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "note": {
                    "description": "Optional note to help identify this API key",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "apiKey": {
                      "type": "object",
                      "properties": {
                        "apiKey": {
                          "description": "The generated API key - store this securely as it won't be shown again",
                          "type": "string"
                        }
                      },
                      "required": [
                        "apiKey"
                      ]
                    }
                  },
                  "required": [
                    "apiKey"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete API Key",
        "description": "Permanently delete an API key. This action cannot be undone and the key will immediately become invalid.",
        "tags": [
          "API Keys"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiKey": {
                    "description": "The API key to delete",
                    "type": "string"
                  }
                },
                "required": [
                  "apiKey"
                ]
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List API Keys",
        "description": "Retrieve a paginated list of your API keys. Only partial key values are returned for security.",
        "tags": [
          "API Keys"
        ],
        "parameters": [
          {
            "required": false,
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "direction",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "docs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "apiKey": {
                            "description": "Partial API key for identification",
                            "type": "string"
                          },
                          "note": {
                            "description": "Optional note associated with this API key",
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "ISO timestamp when the API key was created",
                            "type": "string"
                          }
                        },
                        "required": [
                          "apiKey",
                          "createdAt"
                        ]
                      }
                    },
                    "total": {
                      "type": "number"
                    },
                    "limit": {
                      "type": "number"
                    },
                    "pages": {
                      "type": "number"
                    },
                    "page": {
                      "type": "number"
                    },
                    "pagingCounter": {
                      "type": "number"
                    },
                    "hasPrevPage": {
                      "type": "boolean"
                    },
                    "hasNextPage": {
                      "type": "boolean"
                    },
                    "prevPage": {
                      "type": "number"
                    },
                    "nextPage": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "docs",
                    "total",
                    "limit",
                    "pages",
                    "page",
                    "pagingCounter",
                    "hasPrevPage",
                    "hasNextPage"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/creators": {
      "get": {
        "summary": "List Creators",
        "description": "Retrieve a paginated list of creators, optionally filtered by user ID or Discord ID.",
        "tags": [
          "Creators"
        ],
        "parameters": [
          {
            "required": false,
            "in": "query",
            "name": "userId",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {}
                }
              ]
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "discordId",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {}
                }
              ]
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "direction",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "docs": {
                      "type": "array",
                      "items": {}
                    },
                    "total": {
                      "type": "number"
                    },
                    "limit": {
                      "type": "number"
                    },
                    "pages": {
                      "type": "number"
                    },
                    "page": {
                      "type": "number"
                    },
                    "pagingCounter": {
                      "type": "number"
                    },
                    "hasPrevPage": {
                      "type": "boolean"
                    },
                    "hasNextPage": {
                      "type": "boolean"
                    },
                    "prevPage": {
                      "type": "number"
                    },
                    "nextPage": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "docs",
                    "total",
                    "limit",
                    "pages",
                    "page",
                    "pagingCounter",
                    "hasPrevPage",
                    "hasNextPage"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/creators/me": {
      "get": {
        "summary": "Get Authenticated Creator Profile",
        "description": "Retrieve your own creator profile information including balances and subscription details.",
        "tags": [
          "Creators"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "creator": {},
                    "balance": {
                      "type": "number"
                    },
                    "subscriptionBalance": {
                      "type": "number"
                    },
                    "foreverBalance": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "balance",
                    "subscriptionBalance",
                    "foreverBalance"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/creators/{userId}": {
      "get": {
        "summary": "Get Creator Details",
        "description": "Retrieve detailed information about a specific creator by their user ID.",
        "tags": [
          "Creators"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "creator": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/creators/update": {
      "post": {
        "summary": "Update Creator Profile",
        "description": "Update your creator profile settings including username, image, and preferences.",
        "tags": [
          "Creators"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "creator": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/tools/{toolKey}": {
      "get": {
        "summary": "Get Tool Details",
        "description": "Retrieve detailed information about a specific tool including its parameters and configuration.",
        "tags": [
          "Tools"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "toolKey",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tool": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "active": {
                          "type": "boolean"
                        },
                        "description": {
                          "type": "string"
                        },
                        "output_type": {
                          "type": "string"
                        },
                        "cost_estimate": {
                          "type": "string"
                        },
                        "parameters": {
                          "type": "array",
                          "items": {}
                        },
                        "resolutions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "thumbnail": {
                          "type": "string"
                        },
                        "order": {
                          "type": "number"
                        },
                        "base_model": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "key",
                        "name",
                        "output_type"
                      ]
                    }
                  },
                  "required": [
                    "tool"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/tools": {
      "get": {
        "summary": "List Available Tools",
        "description": "Retrieve a list of all available tools with their metadata and configuration options.",
        "tags": [
          "Tools"
        ],
        "parameters": [
          {
            "required": false,
            "in": "query",
            "name": "hideParams",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tools": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "active": {
                            "type": "boolean"
                          },
                          "description": {
                            "type": "string"
                          },
                          "output_type": {
                            "type": "string"
                          },
                          "cost_estimate": {
                            "type": "string"
                          },
                          "parameters": {
                            "type": "array",
                            "items": {}
                          },
                          "resolutions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "thumbnail": {
                            "type": "string"
                          },
                          "order": {
                            "type": "number"
                          },
                          "base_model": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "key",
                          "name",
                          "output_type"
                        ]
                      }
                    }
                  },
                  "required": [
                    "tools"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/tasks/cost": {
      "post": {
        "summary": "Calculate Task Cost",
        "description": "Calculate the estimated cost in manna for executing a task with specified tool and arguments.",
        "tags": [
          "Tasks"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tool": {
                    "type": "string"
                  },
                  "args": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cost": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "cost"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/tasks/create": {
      "post": {
        "summary": "Create New Task",
        "description": "Create and execute a new task using a specified tool with optional arguments and visibility settings.",
        "tags": [
          "Tasks"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tool": {
                    "type": "string"
                  },
                  "args": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "makePublic": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "task": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {},
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/tasks": {
      "get": {
        "summary": "List User Tasks",
        "description": "Retrieve a paginated list of tasks for the authenticated user with optional filtering by status, type, or tool.",
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "required": false,
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "taskId",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "output_type",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "cost",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "tool",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "minDate",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "direction",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "docs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "user": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string"
                              },
                              "userId": {
                                "type": "string"
                              },
                              "username": {
                                "type": "string"
                              },
                              "userImage": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "_id",
                              "userId",
                              "username",
                              "userImage"
                            ]
                          },
                          "agent": {},
                          "tool": {
                            "type": "string"
                          },
                          "cost": {
                            "type": "number"
                          },
                          "output_type": {
                            "type": "string"
                          },
                          "args": {},
                          "status": {
                            "type": "string"
                          },
                          "performance": {},
                          "result": {},
                          "model": {},
                          "error": {},
                          "progress": {
                            "type": "number"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "_id",
                          "user",
                          "tool",
                          "args",
                          "status"
                        ]
                      }
                    },
                    "total": {
                      "type": "number"
                    },
                    "limit": {
                      "type": "number"
                    },
                    "pages": {
                      "type": "number"
                    },
                    "page": {
                      "type": "number"
                    },
                    "pagingCounter": {
                      "type": "number"
                    },
                    "hasPrevPage": {
                      "type": "boolean"
                    },
                    "hasNextPage": {
                      "type": "boolean"
                    },
                    "prevPage": {
                      "type": "number"
                    },
                    "nextPage": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "docs",
                    "total",
                    "limit",
                    "pages",
                    "page",
                    "pagingCounter",
                    "hasPrevPage",
                    "hasNextPage"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/tasks/{taskId}": {
      "get": {
        "summary": "Get Task Details",
        "description": "Retrieve detailed information about a specific task including its status and output.",
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "taskId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "task": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "userImage": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "_id",
                            "userId",
                            "username",
                            "userImage"
                          ]
                        },
                        "agent": {},
                        "tool": {
                          "type": "string"
                        },
                        "cost": {
                          "type": "number"
                        },
                        "output_type": {
                          "type": "string"
                        },
                        "args": {},
                        "status": {
                          "type": "string"
                        },
                        "performance": {},
                        "result": {},
                        "model": {},
                        "error": {},
                        "progress": {
                          "type": "number"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "_id",
                        "user",
                        "tool",
                        "args",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "task"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/tasks/events": {
      "get": {
        "summary": "Subscribe Task Events",
        "description": "Subscribe to real-time task update events via Server-Sent Events (SSE).",
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "required": false,
            "in": "query",
            "name": "taskId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/tasks/cancel": {
      "post": {
        "summary": "Cancel Running Task",
        "description": "Cancel a task that is currently in progress or queued for execution.",
        "tags": [
          "Tasks"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "taskId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "taskStatus": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "taskStatus"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/models/{modelId}": {
      "get": {
        "summary": "Get Model Details",
        "description": "Retrieve detailed information about a specific AI model by its ID.",
        "tags": [
          "Models"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "modelId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "model": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update Model",
        "description": "Update the visibility or deletion status of a specific model.",
        "tags": [
          "Models"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "modelId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "public": {
                    "type": "boolean"
                  },
                  "deleted": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "model": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/models/{modelId}/like": {
      "post": {
        "summary": "Like Model",
        "description": "Add a like to a model, showing appreciation and boosting its visibility.",
        "tags": [
          "Models"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "modelId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Unlike Model",
        "description": "Remove a previously given like from a model.",
        "tags": [
          "Models"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "modelId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/creations": {
      "get": {
        "summary": "List Creations",
        "description": "Retrieve a paginated list of creations, optionally filtered by user ID or name.",
        "tags": [
          "Creations"
        ],
        "parameters": [
          {
            "required": false,
            "in": "query",
            "name": "userId",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {}
                }
              ]
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "direction",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "docs": {
                      "type": "array",
                      "items": {}
                    },
                    "total": {
                      "type": "number"
                    },
                    "limit": {
                      "type": "number"
                    },
                    "pages": {
                      "type": "number"
                    },
                    "page": {
                      "type": "number"
                    },
                    "pagingCounter": {
                      "type": "number"
                    },
                    "hasPrevPage": {
                      "type": "boolean"
                    },
                    "hasNextPage": {
                      "type": "boolean"
                    },
                    "prevPage": {
                      "type": "number"
                    },
                    "nextPage": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "docs",
                    "total",
                    "limit",
                    "pages",
                    "page",
                    "pagingCounter",
                    "hasPrevPage",
                    "hasNextPage"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/creations/{creationId}": {
      "get": {
        "summary": "Get Creation Details",
        "description": "Retrieve detailed information about a specific creation by its ID.",
        "tags": [
          "Creations"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "creationId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "creation": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update Creation",
        "description": "Update the visibility or deletion status of a specific creation.",
        "tags": [
          "Creations"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "creationId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "public": {
                    "type": "boolean"
                  },
                  "deleted": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "creation": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/creations/bulk": {
      "patch": {
        "summary": "Bulk Update Creations",
        "description": "Update the visibility or deletion status of multiple creations at once.",
        "tags": [
          "Creations"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "creationIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "public": {
                    "type": "boolean"
                  },
                  "deleted": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "creationIds"
                ]
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "creationId": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "error": {},
                          "creation": {}
                        },
                        "required": [
                          "creationId",
                          "status"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/creations/{creationId}/like": {
      "post": {
        "summary": "Like Creation",
        "description": "Add a like to a creation, showing appreciation and boosting its visibility.",
        "tags": [
          "Creations"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "creationId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Unlike Creation",
        "description": "Remove a previously given like from a creation.",
        "tags": [
          "Creations"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "creationId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/collections/light": {
      "get": {
        "summary": "Get User Collections Light",
        "description": "Retrieve a lightweight list of collections owned by the current user with basic information.",
        "tags": [
          "Collections"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "collections": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/collections/{collectionId}": {
      "get": {
        "summary": "Get Collection Details",
        "description": "Retrieve detailed information about a specific collection by its ID.",
        "tags": [
          "Collections"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "collectionId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "collection": {}
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update Collection",
        "description": "Modify the name, description, or visibility settings of an existing collection.",
        "tags": [
          "Collections"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "collectionId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "public": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "collectionId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "collectionId"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Collection",
        "description": "Permanently delete a collection and remove all creation associations.",
        "tags": [
          "Collections"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "collectionId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/v2/collections/{collectionId}/creations": {
      "get": {
        "summary": "Get Collection Creations",
        "description": "Retrieve all creations that belong to a specific collection.",
        "tags": [
          "Collections"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "collectionId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "creations": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/collections": {
      "post": {
        "summary": "Create New Collection",
        "description": "Create a new collection to organize and group related creations together.",
        "tags": [
          "Collections"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "creationIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "public": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "collectionId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/collections/{collectionId}/download": {
      "post": {
        "summary": "Download Collection",
        "description": "Generate and download a ZIP file containing all creations in the collection.",
        "tags": [
          "Collections"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "collectionId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/collections/{collectionId}/creations/add": {
      "patch": {
        "summary": "Add Creations",
        "description": "Add one or more creations to an existing collection.",
        "tags": [
          "Collections"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "collectionId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "creationIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "creationIds"
                ]
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "collectionId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "collectionId"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/collections/{collectionId}/creations/remove": {
      "patch": {
        "summary": "Remove Creations",
        "description": "Remove one or more creations from an existing collection.",
        "tags": [
          "Collections"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "collectionId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "creationIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "creationIds"
                ]
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "collectionId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "collectionId"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/agents": {
      "get": {
        "summary": "List Agents",
        "description": "Retrieve a paginated list of agents, optionally filtered by user ID, username, or name.",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": false,
            "in": "query",
            "name": "userId",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {}
                }
              ]
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "username",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {}
                }
              ]
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "direction",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "docs": {
                      "type": "array",
                      "items": {}
                    },
                    "total": {
                      "type": "number"
                    },
                    "limit": {
                      "type": "number"
                    },
                    "pages": {
                      "type": "number"
                    },
                    "page": {
                      "type": "number"
                    },
                    "pagingCounter": {
                      "type": "number"
                    },
                    "hasPrevPage": {
                      "type": "boolean"
                    },
                    "hasNextPage": {
                      "type": "boolean"
                    },
                    "prevPage": {
                      "type": "number"
                    },
                    "nextPage": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "docs",
                    "total",
                    "limit",
                    "pages",
                    "page",
                    "pagingCounter",
                    "hasPrevPage",
                    "hasNextPage"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create New Agent",
        "description": "Create a new AI agent with specified configuration, models, persona, and capabilities.",
        "tags": [
          "Agents"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "key": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  },
                  "models": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "lora": {
                          "type": "string"
                        },
                        "use_when": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "lora"
                      ]
                    }
                  },
                  "persona": {
                    "type": "string"
                  },
                  "isPersonaPublic": {
                    "type": "boolean"
                  },
                  "greeting": {
                    "type": "string"
                  },
                  "knowledge": {
                    "type": "string"
                  },
                  "voice": {
                    "type": "string"
                  },
                  "suggestions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string"
                        },
                        "prompt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "label",
                        "prompt"
                      ]
                    }
                  },
                  "tools": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "llm_settings": {
                    "type": "object",
                    "properties": {
                      "model_profile": {
                        "anyOf": [
                          {
                            "type": "string",
                            "enum": [
                              "low"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "medium"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "high"
                            ]
                          }
                        ]
                      },
                      "thinking_policy": {
                        "anyOf": [
                          {
                            "type": "string",
                            "enum": [
                              "auto"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "off"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "always"
                            ]
                          }
                        ]
                      },
                      "thinking_effort_cap": {
                        "anyOf": [
                          {
                            "type": "string",
                            "enum": [
                              "low"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "medium"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "high"
                            ]
                          }
                        ]
                      },
                      "thinking_effort_instructions": {
                        "type": "string"
                      }
                    }
                  }
                },
                "required": [
                  "name",
                  "key",
                  "description",
                  "image"
                ]
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "agentId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/agents/{agentId}": {
      "get": {
        "summary": "Get Agent Details",
        "description": "Retrieve detailed information about a specific agent by its ID.",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "agent": {}
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update Agent",
        "description": "Update the configuration, settings, or properties of an existing agent.",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "key": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  },
                  "public": {
                    "type": "boolean"
                  },
                  "models": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "lora": {
                          "type": "string"
                        },
                        "use_when": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "lora"
                      ]
                    }
                  },
                  "persona": {
                    "type": "string"
                  },
                  "isPersonaPublic": {
                    "type": "boolean"
                  },
                  "greeting": {
                    "type": "string"
                  },
                  "knowledge": {
                    "type": "string"
                  },
                  "voice": {
                    "type": "string"
                  },
                  "suggestions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string"
                        },
                        "prompt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "label",
                        "prompt"
                      ]
                    }
                  },
                  "owner_pays": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "off"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "deployments"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "full"
                        ]
                      },
                      {
                        "type": "boolean"
                      }
                    ]
                  },
                  "tools": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "llm_settings": {
                    "type": "object",
                    "properties": {
                      "model_profile": {
                        "anyOf": [
                          {
                            "type": "string",
                            "enum": [
                              "low"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "medium"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "high"
                            ]
                          }
                        ]
                      },
                      "thinking_policy": {
                        "anyOf": [
                          {
                            "type": "string",
                            "enum": [
                              "auto"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "off"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "always"
                            ]
                          }
                        ]
                      },
                      "thinking_effort_cap": {
                        "anyOf": [
                          {
                            "type": "string",
                            "enum": [
                              "low"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "medium"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "high"
                            ]
                          }
                        ]
                      },
                      "thinking_effort_instructions": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "agentId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "agentId"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Agent",
        "description": "Permanently delete an agent and all its associated data, deployments, and configurations.",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/v2/agents/{agentId}/triggers": {
      "get": {
        "summary": "Get Agent Triggers",
        "description": "Retrieve all automated triggers configured for a specific agent.",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "post": {
        "summary": "Create Agent Trigger",
        "description": "Create a new automated trigger that activates the agent under specific conditions.",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/agents/{agentId}/triggers/{triggerId}": {
      "patch": {
        "summary": "Update Agent Trigger",
        "description": "Modify the configuration or conditions of an existing agent trigger.",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "path",
            "name": "triggerId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "summary": "Delete Agent Trigger",
        "description": "Remove an automated trigger from an agent, stopping its activation.",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "path",
            "name": "triggerId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/agents/{agentId}/deployments": {
      "get": {
        "summary": "Get Agent Deployments",
        "description": "Retrieve all platform deployments (Discord, Twitter, etc.) for a specific agent.",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "post": {
        "summary": "Deploy Agent",
        "description": "Deploy an agent to a platform or update an existing deployment configuration.",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deploymentId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "deploymentId"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update Agent Deployment",
        "description": "Modify the configuration or settings of an existing agent deployment.",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/agents/{agentId}/deployments/{platform}": {
      "delete": {
        "summary": "Delete Agent Deployment",
        "description": "Remove an agent deployment from a specific platform, stopping its operation there.",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "path",
            "name": "platform",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/agents/{agentId}/like": {
      "post": {
        "summary": "Like Agent",
        "description": "Add a like to an agent, showing appreciation and potentially boosting its visibility.",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Unlike Agent",
        "description": "Remove a previously given like from an agent.",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/agents/triggers": {
      "get": {
        "summary": "Get User Triggers",
        "description": "Retrieve all triggers across all agents owned by the authenticated user.",
        "tags": [
          "Agents"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "triggers": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/agents/deployments": {
      "get": {
        "summary": "Get User Deployments",
        "description": "Retrieve all deployments across all agents owned by the authenticated user.",
        "tags": [
          "Agents"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deployments": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/agents/{agentId}/memory": {
      "get": {
        "summary": "Get Agent Memory",
        "description": "Retrieve the personalized memory content and unabsorbed directives for a specific agent.",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string"
                    },
                    "unabsorbedDirectives": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "content": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "_id",
                          "content"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Save Agent Memory",
        "description": "Store or update personalized memory content for an agent to improve future interactions.",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string"
                  }
                },
                "required": [
                  "content"
                ]
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/agents/{agentId}/memory-user": {
      "get": {
        "summary": "Get Memory User",
        "description": "Retrieve the complete memory_user document containing all user-specific data for an agent.",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update Memory User",
        "description": "Modify the memory_user document with updated user-specific information for an agent.",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/agents/{agentId}/user-memory-enabled": {
      "patch": {
        "summary": "Toggle Memory Setting",
        "description": "Enable or disable the user memory feature for an agent.",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_memory_enabled": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "user_memory_enabled"
                ]
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/memory-sessions/{memoryId}": {
      "get": {
        "summary": "Get Memory Session",
        "description": "Retrieve a specific memory_session document containing session-specific memory data.",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "memoryId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update Memory Session",
        "description": "Modify a memory_session document with updated session-specific information.",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "memoryId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/agents/{agentId}/memory/{memoryId}": {
      "delete": {
        "summary": "Remove Unabsorbed Memory",
        "description": "Delete specific unabsorbed memory items from the user memory for an agent.",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "path",
            "name": "memoryId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/agents/{agentId}/memory-agent": {
      "get": {
        "summary": "Get Collective Memory",
        "description": "Retrieve all collective memory shards and their facts for an agent.",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "shards": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "agent_id": {},
                          "content": {
                            "type": "string"
                          },
                          "extraction_prompt": {
                            "type": "string"
                          },
                          "is_active": {
                            "type": "boolean"
                          },
                          "facts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "_id": {
                                  "type": "string"
                                },
                                "content": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "_id",
                                "content"
                              ]
                            }
                          },
                          "unabsorbed_memory_ids": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "_id": {
                                  "type": "string"
                                },
                                "content": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "_id",
                                "content"
                              ]
                            }
                          }
                        },
                        "required": [
                          "_id",
                          "agent_id",
                          "facts",
                          "unabsorbed_memory_ids"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Memory Shard",
        "description": "Create a new collective memory shard with a specific extraction prompt for organizing agent knowledge.",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shard_name": {
                    "minLength": 1,
                    "maxLength": 50,
                    "type": "string"
                  },
                  "extraction_prompt": {
                    "minLength": 1,
                    "maxLength": 2000,
                    "type": "string"
                  }
                },
                "required": [
                  "shard_name",
                  "extraction_prompt"
                ]
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "shard_id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/agents/{agentId}/memory-agent/{memoryAgentId}": {
      "patch": {
        "summary": "Update Memory Agent",
        "description": "Modify a memory_agent document containing collective memory data.",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "path",
            "name": "memoryAgentId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/agents/{agentId}/memory-agent/{memoryAgentId}/memory/{memoryId}": {
      "delete": {
        "summary": "Remove Agent Memory",
        "description": "Remove specific memory items from agent collective memory arrays (facts or unabsorbed memory).",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "path",
            "name": "memoryAgentId",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "path",
            "name": "memoryId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "arrayField": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "facts"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "unabsorbed_memory_ids"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "arrayField"
                ]
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/agents/{agentId}/dashboard": {
      "get": {
        "summary": "Get Agent Dashboard",
        "description": "Retrieve analytics and activity data for an agent within a specified date range.",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": false,
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sessionActivity": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "date": {
                            "type": "string"
                          },
                          "platform": {
                            "type": "string"
                          },
                          "totalUserMessages": {
                            "type": "number"
                          },
                          "sessionCount": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "date",
                          "platform",
                          "totalUserMessages",
                          "sessionCount"
                        ]
                      }
                    },
                    "messageActivity": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "date": {
                            "type": "string"
                          },
                          "platform": {
                            "type": "string"
                          },
                          "messageCount": {
                            "type": "number"
                          },
                          "tokenCount": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "date",
                          "platform",
                          "messageCount"
                        ]
                      }
                    },
                    "userStats": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "username": {
                            "type": "string"
                          },
                          "messageCount": {
                            "type": "number"
                          },
                          "tokenCount": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "username",
                          "messageCount"
                        ]
                      }
                    },
                    "dateRange": {
                      "type": "object",
                      "properties": {
                        "start": {
                          "type": "string"
                        },
                        "end": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "start",
                        "end"
                      ]
                    },
                    "platforms": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/agents/{agentId}/creations": {
      "get": {
        "summary": "Get Agent Creations",
        "description": "Retrieve a list of the agent's creations, including both the user's own creations and public creations by others.",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": false,
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": true,
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "docs": {
                      "type": "array",
                      "items": {}
                    },
                    "nextCursor": {
                      "type": "string"
                    },
                    "totalDocs": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "docs",
                    "totalDocs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/agents/{agentId}/permissions": {
      "get": {
        "summary": "Get Agent Permissions",
        "description": "Retrieve the list of users who have access permissions to an agent and their permission levels.",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "agent": {
                            "type": "string"
                          },
                          "user": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string"
                              },
                              "userId": {
                                "type": "string"
                              },
                              "username": {
                                "type": "string"
                              },
                              "userImage": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "_id",
                              "username"
                            ]
                          },
                          "level": {
                            "type": "string"
                          },
                          "grantedAt": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "_id",
                          "agent",
                          "user",
                          "level",
                          "grantedAt"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Agent Permissions",
        "description": "Grant or modify access permissions for users to collaborate on an agent.",
        "tags": [
          "Agents"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "agentId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "permissions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string"
                        },
                        "level": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "editor"
                              ]
                            },
                            {
                              "type": "string",
                              "enum": [
                                "owner"
                              ]
                            }
                          ]
                        }
                      },
                      "required": [
                        "username",
                        "level"
                      ]
                    }
                  }
                },
                "required": [
                  "permissions"
                ]
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/agents/shared": {
      "get": {
        "summary": "Get Shared Agents",
        "description": "Retrieve all agents that have been shared with the current user by other users.",
        "tags": [
          "Agents"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sharedAgents": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "agent": {},
                          "permissionLevel": {
                            "type": "string"
                          },
                          "grantedAt": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "agent",
                          "permissionLevel",
                          "grantedAt"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/sessions/create": {
      "post": {
        "summary": "Create New Session",
        "description": "Create a new conversation session with one or more agents, including budget and autonomy settings.",
        "tags": [
          "Sessions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "agent_ids": {
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "scenario": {
                    "maxLength": 1000,
                    "type": "string"
                  },
                  "budget": {
                    "type": "object",
                    "properties": {
                      "manna_budget": {
                        "minimum": 100,
                        "maximum": 50000,
                        "type": "number"
                      },
                      "token_budget": {
                        "minimum": 1000,
                        "maximum": 1000000,
                        "type": "number"
                      },
                      "turn_budget": {
                        "minimum": 1,
                        "maximum": 1000,
                        "type": "number"
                      }
                    }
                  },
                  "title": {
                    "maxLength": 1000,
                    "type": "string"
                  },
                  "autonomy_settings": {
                    "type": "object",
                    "properties": {
                      "auto_reply": {
                        "type": "boolean"
                      },
                      "reply_interval": {
                        "minimum": 0,
                        "maximum": 3600,
                        "type": "number"
                      },
                      "actor_selection_method": {
                        "anyOf": [
                          {
                            "type": "string",
                            "enum": [
                              "random"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "random_exclude_last"
                            ]
                          }
                        ]
                      }
                    },
                    "required": [
                      "auto_reply",
                      "reply_interval",
                      "actor_selection_method"
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "201": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "session": {}
                  },
                  "required": [
                    "success",
                    "session"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {},
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/sessions": {
      "post": {
        "summary": "Interact with Session",
        "description": "Send a message to an existing session or create a new session with the first message.",
        "tags": [
          "Sessions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "session_id": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "stream": {
                    "type": "boolean"
                  },
                  "thinking": {
                    "type": "boolean"
                  },
                  "agent_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "scenario": {
                    "maxLength": 1000,
                    "type": "string"
                  },
                  "budget": {
                    "type": "object",
                    "properties": {
                      "manna_budget": {
                        "minimum": 100,
                        "maximum": 50000,
                        "type": "number"
                      },
                      "token_budget": {
                        "minimum": 1000,
                        "maximum": 1000000,
                        "type": "number"
                      },
                      "turn_budget": {
                        "minimum": 1,
                        "maximum": 1000,
                        "type": "number"
                      }
                    }
                  },
                  "title": {
                    "maxLength": 1000,
                    "type": "string"
                  },
                  "autonomy_settings": {
                    "type": "object",
                    "properties": {
                      "auto_reply": {
                        "type": "boolean"
                      },
                      "reply_interval": {
                        "minimum": 0,
                        "maximum": 3600,
                        "type": "number"
                      },
                      "actor_selection_method": {
                        "anyOf": [
                          {
                            "type": "string",
                            "enum": [
                              "random"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "random_exclude_last"
                            ]
                          }
                        ]
                      }
                    },
                    "required": [
                      "auto_reply",
                      "reply_interval",
                      "actor_selection_method"
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "session_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "session_id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {},
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List User Sessions",
        "description": "Retrieve a paginated list of sessions for the authenticated user, optionally filtered by agent.",
        "tags": [
          "Sessions"
        ],
        "parameters": [
          {
            "required": false,
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "orderBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "direction",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "agent_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "docs": {
                      "type": "array",
                      "items": {}
                    },
                    "total": {
                      "type": "number"
                    },
                    "limit": {
                      "type": "number"
                    },
                    "pages": {
                      "type": "number"
                    },
                    "page": {
                      "type": "number"
                    },
                    "pagingCounter": {
                      "type": "number"
                    },
                    "hasPrevPage": {
                      "type": "boolean"
                    },
                    "hasNextPage": {
                      "type": "boolean"
                    },
                    "prevPage": {
                      "type": "number"
                    },
                    "nextPage": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "docs",
                    "total",
                    "limit",
                    "pages",
                    "page",
                    "pagingCounter",
                    "hasPrevPage",
                    "hasNextPage"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/sessions/react": {
      "post": {
        "summary": "React to Message",
        "description": "Add an emoji reaction to a specific message within a session.",
        "tags": [
          "Sessions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message_id": {
                    "type": "string"
                  },
                  "reaction": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {}
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {},
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/sessions/{session_id}": {
      "get": {
        "summary": "Get Session Details",
        "description": "Retrieve detailed information about a specific session including all messages and participants.",
        "tags": [
          "Sessions"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "session_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "session": {}
                  },
                  "required": [
                    "session"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update Session",
        "description": "Update session properties such as title or pinned status.",
        "tags": [
          "Sessions"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "session_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "minLength": 1,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "pinned": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Session",
        "description": "Permanently delete a session and all its associated messages and data.",
        "tags": [
          "Sessions"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "session_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/sessions/{session_id}/cancel": {
      "post": {
        "summary": "Cancel Session",
        "description": "Cancel a currently running session and stop any ongoing tool executions.",
        "tags": [
          "Sessions"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "session_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tool_call_id": {
                    "type": "string"
                  },
                  "tool_call_index": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "session_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "session_id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/sessions/{session_id}/share": {
      "post": {
        "summary": "Share Session",
        "description": "Create a shareable public link for a session up to a specific message point.",
        "tags": [
          "Sessions"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "session_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message_id": {
                    "type": "string"
                  },
                  "title": {
                    "maxLength": 200,
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "201": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "share_id": {
                      "type": "string"
                    },
                    "share_url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "share_id",
                    "share_url"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/sessions/share/{share_id}": {
      "get": {
        "summary": "Get Shared Session",
        "description": "Retrieve a publicly shared session using its share ID (no authentication required).",
        "tags": [
          "Sessions"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "share_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "share": {
                      "type": "object",
                      "properties": {
                        "share_id": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "session": {},
                        "messages": {
                          "type": "array",
                          "items": {}
                        },
                        "owner": {},
                        "createdAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "share_id",
                        "session",
                        "messages",
                        "owner",
                        "createdAt"
                      ]
                    }
                  },
                  "required": [
                    "share"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Session Share",
        "description": "Delete a session share link, making it no longer accessible publicly.",
        "tags": [
          "Sessions"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "share_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://api.eden.art",
      "description": "Production server"
    },
    {
      "url": "https://api-staging.eden.art",
      "description": "Staging server"
    },
    {
      "url": "http://localhost:8080",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "name": "X-Api-Key",
        "in": "header"
      }
    }
  }
}